// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NFT_Marketplace2 extends ethereum.SmartContract {
  static bind(address: Address): NFT_Marketplace2 {
    return new NFT_Marketplace2("NFT_Marketplace2", address);
  }

  getProxyAdmin(proxy: Address): Address {
    let result = super.call(
      "getProxyAdmin",
      "getProxyAdmin(address):(address)",
      [ethereum.Value.fromAddress(proxy)],
    );

    return result[0].toAddress();
  }

  try_getProxyAdmin(proxy: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getProxyAdmin",
      "getProxyAdmin(address):(address)",
      [ethereum.Value.fromAddress(proxy)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getProxyImplementation(proxy: Address): Address {
    let result = super.call(
      "getProxyImplementation",
      "getProxyImplementation(address):(address)",
      [ethereum.Value.fromAddress(proxy)],
    );

    return result[0].toAddress();
  }

  try_getProxyImplementation(proxy: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getProxyImplementation",
      "getProxyImplementation(address):(address)",
      [ethereum.Value.fromAddress(proxy)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ChangeProxyAdminCall extends ethereum.Call {
  get inputs(): ChangeProxyAdminCall__Inputs {
    return new ChangeProxyAdminCall__Inputs(this);
  }

  get outputs(): ChangeProxyAdminCall__Outputs {
    return new ChangeProxyAdminCall__Outputs(this);
  }
}

export class ChangeProxyAdminCall__Inputs {
  _call: ChangeProxyAdminCall;

  constructor(call: ChangeProxyAdminCall) {
    this._call = call;
  }

  get proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeProxyAdminCall__Outputs {
  _call: ChangeProxyAdminCall;

  constructor(call: ChangeProxyAdminCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeCall extends ethereum.Call {
  get inputs(): UpgradeCall__Inputs {
    return new UpgradeCall__Inputs(this);
  }

  get outputs(): UpgradeCall__Outputs {
    return new UpgradeCall__Outputs(this);
  }
}

export class UpgradeCall__Inputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }

  get proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get implementation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpgradeCall__Outputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }
}

export class UpgradeAndCallCall extends ethereum.Call {
  get inputs(): UpgradeAndCallCall__Inputs {
    return new UpgradeAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeAndCallCall__Outputs {
    return new UpgradeAndCallCall__Outputs(this);
  }
}

export class UpgradeAndCallCall__Inputs {
  _call: UpgradeAndCallCall;

  constructor(call: UpgradeAndCallCall) {
    this._call = call;
  }

  get proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get implementation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UpgradeAndCallCall__Outputs {
  _call: UpgradeAndCallCall;

  constructor(call: UpgradeAndCallCall) {
    this._call = call;
  }
}
